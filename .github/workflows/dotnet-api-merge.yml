name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    defaults:
      run:
        working-directory: ./aspnet/SJApi.WebApi
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.1
      - run: dotnet build
  
  test:
      defaults:
        run:
          working-directory: ./aspnet/SJApi.UnitTesting
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2.3.1
        - run: dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover

  analyze:
      defaults:
        run:
          working-directory: ./aspnet/SJApi.UnitTesting
      needs: [build, test]
      runs-on: windows-latest
      steps:
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 1.11
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache SonarCloud scanner
          id: cache-sonar-scanner
          uses: actions/cache@v1
          with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner
        - name: Install SonarCloud scanner
          if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
          shell: powershell
          run: |
            New-Item -Path .\.sonar\scanner -ItemType Directory
            dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          shell: powershell
          run: |
            .\.sonar\scanner\dotnet-sonarscanner begin /k:"Stock-Jock_dotnet-api" /o:"stock-jock" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
            dotnet build
            dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
            .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  
#   analyze:
#       defaults:
#         run:
#           working-directory: ./aspnet/SJApi.UnitTesting
#       needs: [build, test]
#       runs-on: ubuntu-20.04
#       steps:
#         - uses: actions/checkout@v2.3.1
#         - run: git fetch --unshallow
#         - run: dotnet tool install --global dotnet-sonarscanner
#         - run: | 
#             dotnet sonarscanner begin -o:{ UPDATE } -k:{ UPDATE } -d:sonar.login="${{ secrets.SONAR_TOKEN }}" -d:sonar.host.url='https://sonarcloud.io/'
#             dotnet build
#             dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger trx
#             dotnet sonarscanner end -d:sonar.login="${{ secrets.SONAR_TOKEN }}"
#           env: 
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
